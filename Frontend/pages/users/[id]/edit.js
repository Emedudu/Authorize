import TextArea from "@/components/TextArea";
import { UserContext } from "@/lib/context";
import { db } from "@/lib/firebase";
import { Web3Button } from "@web3modal/react";
import { doc, getDoc, setDoc, updateDoc } from "firebase/firestore";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useContext, useEffect, useState } from "react";
import { useForm } from "react-hook-form";
import { useAccount } from "wagmi";

export default function SignIn() {
  const router = useRouter();
  const { id } = router.query;
  const { address, isConnected } = useAccount();
  const { username, userETH, userAbout, userAvatar } = useContext(UserContext);

  const [randomPic, setRandomPic] = useState(userAvatar);

  useEffect(() => setRandomPic(userAvatar), [userAvatar]);

  const {
    handleSubmit,
    register,
    reset,
    formState: { errors },
  } = useForm();

  const updateProfile = async (values) => {
    const { description } = values;
    console.log(values);
    if (address) {
      try {
        const docRef = doc(db, "users", address);
        const docSnap = await getDoc(docRef);
        let firebaseRes;
        if (docSnap.exists()) {
          firebaseRes = await updateDoc(docRef, {
            userAbout: description || userAbout,
            userAvatar: randomPic,
          });
        } else {
          firebaseRes = await setDoc(docRef, {
            username,
            userAbout: description || userAbout,
            userETH: address,
            userAvatar: randomPic,
          });
        }
        router.push(`/users/${id}`);
      } catch (error) {
        console.log(error);
      }
    }
  };

  return (
    <>
      <Head>
        <title>AUTHORize</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex items-center justify-center min-h-[calc(100vh-108px)]">
        <div class="w-2/3 relative bg-white rounded-lg shadow dark:bg-gray-700">
          <div class="relative px-6 py-6 lg:px-8">
            <h3 class="mb-4 text-xl font-medium text-gray-900 dark:text-white">
              Edit your Profile
            </h3>
            <form className="space-y-6" onSubmit={handleSubmit(updateProfile)}>
              <div>
                <p className="text-red-700 text-sm font-semibold">Username*</p>

                <input
                  placeholder="Pick a unique username"
                  className="p-3 rounded-lg bg-gray-50 w-full border-2 border-gray-500"
                  defaultValue={username}
                  disabled
                />
              </div>

              <div>
                <p className="text-red-700 text-sm font-semibold">
                  {"Avatar (Click to change)*"}
                </p>
                <div
                  className="relative h-32 w-32 cursor-pointer"
                  onClick={() =>
                    setRandomPic(parseInt(Math.random() * 1000000))
                  }
                >
                  <Image
                    src={`https://avatars.dicebear.com/api/avataaars/${randomPic}.svg`}
                    fill={true}
                    className="rounded-full shadow-xl shadow-orange-500/50"
                  />
                </div>
              </div>

              <div className="py-2">
                <p className="text-red-700 text-sm font-semibold">About you*</p>
                <textarea
                  id="editor"
                  rows="8"
                  class="bg-gray-100 border-2 border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3 mt-3"
                  placeholder="Write a description"
                  required
                  defaultValue={userAbout}
                  {...register("description")}
                />
              </div>
              <div className="flex justify-center">
                <button
                  className="rounded-lg bg-orange-400 text-white p-2 hover:scale-105 font-semibold"
                  type="submit"
                >
                  Continue
                </button>
              </div>
            </form>
          </div>
        </div>
      </main>
    </>
  );
}
